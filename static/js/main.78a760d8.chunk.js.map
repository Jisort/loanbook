{"version":3,"sources":["functions/componentActions.js","components/FormActivityIndicator.jsx","components/FormFeedbackMessage.jsx","user/FormLogin.jsx","components/LoadingIndicator.jsx","components/TopMenu.jsx","Menu.jsx","actions/actions.js","components/FormModal.jsx","components/DatePicker.jsx","components/AutocompleteSelect.jsx","client/FormAddClient.jsx","loan/FormIssueLoan.jsx","Home.jsx","App.js","serviceWorker.js","reducers/reducers.js","configureStore.js","index.js","functions/baseUrls.js","functions/APIRequests.js"],"names":["module","exports","pushHistory","props","route","history","push","getUrlData","data_url","dataByUrl","didInvalidate","isFetching","items","lastUpdated","lookup","callback","url","ref","window","document","getElementsByTagName","script","createElement","src","indexOf","parentNode","insertBefore","onload","remove","loadJSONP","sendBack","resp","countryCode","country","e","extractResponseError","results","alert_message","constructor","Array","length","detail","Object","keys","key","toString","formDataToPayload","formData","payload","forEach","value","dynamicSort","property","sortOrder","substr","a","b","roundNumber","num","scale","Math","round","numberWithCommas","x","decimal_places","toFixed","err","this","parts","split","replace","join","FormActivityIndicator","LinearProgress","color","Component","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","MySnackbarContentWrapper","classes","className","variant","onClose","other","Icon","SnackbarContent","clsx","aria-describedby","id","useStyles2","margin","CustomizedSnackbars","React","useState","message_variant","message_text","FormLogin","handleLoginSubmit","preventDefault","setState","activity","FormData","$","grant_type","client_id","client_secret","localStorage","username","login_url","serverBaseUrl","postAPIRequest","token","state","login_button","Button","type","Paper","Container","maxWidth","Grid","container","justify","Card","CardContent","noValidate","autoComplete","onSubmit","item","xs","FormControl","fullWidth","TextField","label","name","withRouter","LoadingIndicator","style","width","height","role","useStyles","grow","flexGrow","menuButton","title","breakpoints","up","search","position","borderRadius","shape","fade","common","white","marginLeft","searchIcon","pointerEvents","justifyContent","inputRoot","inputInput","padding","transition","transitions","create","sectionDesktop","sectionMobile","PrimarySearchAppBar","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","handleProfileMenuOpen","event","currentTarget","handleMobileMenuClose","handleMenuClose","menuId","renderMenu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","MenuItem","onClick","renderMobileMenu","IconButton","aria-label","Badge","badgeContent","aria-controls","aria-haspopup","AppBar","Toolbar","edge","Typography","noWrap","InputBase","placeholder","root","input","inputProps","Menu","handleLogout","logout_url","removeItem","loading","current_user_url","getAPIRequest","brand_name","notifications_count","children","connect","sessionVariables","REQUEST_DATA","RECEIVE_DATA","SELECT_API_ENDPOINT","INVALIDATE_DATA","fetchData","endpoint","dispatch","requestData","fetch","headers","then","response","json","receivedAt","Date","now","receiveData","fetchDataIfNeeded","getState","shouldFetchData","FormModal","Dialog","disableBackdropClick","aria-labelledby","DialogTitle","App","utils","MomentUtils","DatePicker","onChange","maxDate","format","option","CountrySelect","Autocomplete","options","autoHighlight","getOptionLabel","renderOption","Fragment","optionDisplay","renderInput","params","ClientDetailsForm","handleDateChange","date","selected_date","handleCountryChange","country_object","selected_country","querySelector","_18_years_ago","moment","subtract","toDate","countries","date_of_birth","clients_url","reset","countries_list","map","native","phone","add_client_button","DialogActions","handleSubmitClient","DialogContent","required","InputLabel","Select","labelId","optionLabel","data","FormIssueLoan","handleClientChange","selectedOption","selected_client","handleFirstDateChange","date_of_first_repayment","handleApplicationDateChange","date_of_loan_application","matchWithProduct","matching_product","loan_products_data","find","product","parseInt","createLoanProduct","loan_payload","chart_of_accounts_data","banks_data","loan_products_url","chart_of_accounts","loans","today","close_date","add","asset_account","account","income_account","expenses_account","liabilities_account","bank","product_name","short_name","description","start_date","loan_fund","status","minimum_days_disbursement_repayment","minimum_principal","maximum_principal","minimum_repayments","maximum_repayments","minimum_interest_rate","maximum_interest_rate","default_interest_rate","interest_charged_per","repaid_every","repayment_interval","interest_method","days_overdue_before_arreas","days_overdue_before_npa","minimum_guarantors","maximum_guarantors","place_guarantor_funds_hold","enable_multiple_disbursals","amortization","gl_account","interest_account","overpayment_account","losses_from_write_off","is_group_loan","recalculate_loan_advance_payment","realtime_interest","realtime_penalties","total_interest_calculation_method","calculate_repayment_ability_from_salary","no_of_decimal_places","members_only","maximum_number_of_concurrent_loans","recalculate_loan_on_repayment","interest_posting_method","alert","alert_class","loan_reference_no","getTime","member","loan_application_url","issue_loan_button","handleLoanIssueSubmit","InputProps","endAdornment","InputAdornment","chart_of_accounts_url","banks_url","Home","fetchUrlData","var_name","var_value","setSessionVariable","handleCloseDialogue","form","handleOpenDialogue","selectClient","add_client_dialogue_open","issue_loan_dialogue_open","_1_month_ago","count","cell","row","data-toggle","data-target","clients_data","pending_loans_data","payments_mode_data","currencies_data","approved_loans_data","active_loans_data","current_month_income_data","clients","active_loans","current_month_income","sort","loan","actions","tooltip","rowData","Box","pt","Fab","Add","mt","isLoading","columns","field","actionsColumnIndex","handleClickOpen","handleClose","FormAddClient","retrieveUrlData","url_var_name","pending_disbursement_data","exact","path","component","location","hostname","match","rootReducer","combineReducers","action","assign","urlData","loggerMiddleware","createLogger","preloadedState","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","successCallback","errorCallback","method","body","JSON","stringify","ok","catch"],"mappings":"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","file":"static/js/main.78a760d8.chunk.js","sourcesContent":["module.exports = {\r\n    pushHistory: function (props, route) {\r\n        props.history.push(route);\r\n    },\r\n\r\n    getUrlData: function (data_url, dataByUrl) {\r\n        return dataByUrl[\r\n            data_url\r\n            ] || {\r\n            didInvalidate: false,\r\n            isFetching: true,\r\n            items: [],\r\n            lastUpdated: ''\r\n        }\r\n    },\r\n\r\n    lookup: function (callback) {\r\n        try {\r\n            const loadJSONP = (url, callback) => {\r\n                const ref = window.document.getElementsByTagName('script')[0];\r\n                const script = window.document.createElement('script');\r\n                script.src = `${url + (url.indexOf('?') + 1 ? '&' : '?')}callback=${callback}`;\r\n                ref.parentNode.insertBefore(script, ref);\r\n                script.onload = () => {\r\n                    script.remove();\r\n                };\r\n            };\r\n            loadJSONP('http://ipinfo.io?token=e6909d77aca84d', 'sendBack');\r\n            window.sendBack = (resp) => {\r\n                const countryCode = (resp && resp.country) ? resp.country : '';\r\n                callback(countryCode);\r\n            }\r\n        } catch (e) {\r\n\r\n        }\r\n    },\r\n\r\n    extractResponseError(results) {\r\n        let alert_message = '';\r\n        if (results.constructor === Array && results.length > 0) {\r\n            alert_message = results[0];\r\n        } else if (typeof results === \"object\") {\r\n            if (results['detail']) {\r\n                alert_message = results.detail;\r\n            } else if (results['non_field_errors']) {\r\n                alert_message = results['non_field_errors'];\r\n            } else if (Object.keys(results).length > 0) {\r\n                for (let key in results) {\r\n                    alert_message += key + ': ' + results[key] + ' ';\r\n                }\r\n            } else {\r\n                alert_message = results.toString();\r\n            }\r\n        } else if (typeof results === \"string\") {\r\n            alert_message = results;\r\n        }\r\n        return alert_message;\r\n    },\r\n\r\n    formDataToPayload(formData, payload) {\r\n        formData.forEach(function (value, key) {\r\n            payload[key] = value;\r\n        });\r\n        return payload;\r\n    },\r\n\r\n    dynamicSort(property) {\r\n        let sortOrder = 1;\r\n        if (property[0] === \"-\") {\r\n            sortOrder = -1;\r\n            property = property.substr(1);\r\n        }\r\n        return function (a, b) {\r\n            let result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;\r\n            return result * sortOrder;\r\n        }\r\n    },\r\n\r\n    roundNumber: function (num, scale) {\r\n        return +(Math.round(num + \"e+\" + scale) + \"e-\" + scale);\r\n    },\r\n\r\n    numberWithCommas: function (x, decimal_places) {\r\n        if (!decimal_places) {\r\n            decimal_places = 2;\r\n        }\r\n        if (!x && x !== 0) {\r\n            x = null;\r\n        }\r\n        if (x != null) {\r\n            try {\r\n                x = x.toFixed(decimal_places);\r\n            } catch (err) {\r\n                x = this.roundNumber(x, 2);\r\n            }\r\n            let parts = x.toString().split(\".\");\r\n            parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n            return parts.join(\".\");\r\n        } else {\r\n            return x\r\n        }\r\n    }\r\n};","import React, {Component} from \"react\";\r\nimport {LinearProgress} from '@material-ui/core';\r\n\r\nexport default class FormActivityIndicator extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <LinearProgress color=\"primary\"/>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport Button from '@material-ui/core/Button';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport {amber, green} from '@material-ui/core/colors';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport {makeStyles} from '@material-ui/core/styles';\r\n\r\nconst variantIcon = {\r\n    success: CheckCircleIcon,\r\n    warning: WarningIcon,\r\n    error: ErrorIcon,\r\n    info: InfoIcon,\r\n};\r\n\r\nconst useStyles1 = makeStyles(theme => ({\r\n    success: {\r\n        backgroundColor: green[600],\r\n    },\r\n    error: {\r\n        backgroundColor: theme.palette.error.dark,\r\n    },\r\n    info: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n    warning: {\r\n        backgroundColor: amber[700],\r\n    },\r\n    icon: {\r\n        fontSize: 20,\r\n    },\r\n    iconVariant: {\r\n        opacity: 0.9,\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    message: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n    },\r\n}));\r\n\r\nfunction MySnackbarContentWrapper(props) {\r\n    const classes = useStyles1();\r\n    const {className, message, onClose, variant, ...other} = props;\r\n    const Icon = variantIcon[variant];\r\n\r\n    return (\r\n        <SnackbarContent\r\n            className={clsx(classes[variant], className)}\r\n            aria-describedby=\"client-snackbar\"\r\n            message={\r\n                <span id=\"client-snackbar\" className={classes.message}>\r\n          <Icon className={clsx(classes.icon, classes.iconVariant)}/>\r\n                    {message}\r\n        </span>\r\n            }\r\n            {...other}\r\n        />\r\n    );\r\n}\r\n\r\nMySnackbarContentWrapper.propTypes = {\r\n    className: PropTypes.string,\r\n    message: PropTypes.string,\r\n    onClose: PropTypes.func,\r\n    variant: PropTypes.oneOf(['error', 'info', 'success', 'warning']).isRequired,\r\n};\r\n\r\nconst useStyles2 = makeStyles(theme => ({\r\n    margin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default function CustomizedSnackbars(props) {\r\n    const classes = useStyles2();\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClick = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <MySnackbarContentWrapper\r\n                variant={props.message_variant}\r\n                className={classes.margin}\r\n                message={props.message_text}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, {Component} from \"react\";\r\nimport {Container, TextField, Card, CardContent, FormControl, Button, Grid, Paper} from \"@material-ui/core\";\r\nimport FormActivityIndicator from \"../components/FormActivityIndicator\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {postAPIRequest} from \"../functions/APIRequests\";\r\nimport {serverBaseUrl} from \"../functions/baseUrls\";\r\nimport {pushHistory, extractResponseError, formDataToPayload} from \"../functions/componentActions\";\r\nimport $ from \"jquery\";\r\nimport FormFeedbackMessage from \"../components/FormFeedbackMessage\";\r\n\r\nclass FormLogin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activity: false,\r\n            message: false,\r\n            message_text: null,\r\n            message_variant: 'info'\r\n        }\r\n    }\r\n\r\n    handleLoginSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            activity: true\r\n        });\r\n        let formData = new FormData($(\"form#login-form\")[0]);\r\n        let payload = {\r\n            grant_type: 'password',\r\n            client_id: 'i7YlkIu4qdkLZJsnJubhIbeYWP0Qq2NH3D0vatNO',\r\n            client_secret: 'cx84im8OqngRMM3EftMAfKh1vwEFuSuAD9GH2gE7JxzjE7lJCTI55ZJND8MFPOGkHcFesA9Piy9CgKSzaz3L0bKyspdhq1w8wRouYwhrv3ba8rNwvZ4ppnsebR0rccdB'\r\n        };\r\n        payload = formDataToPayload(formData, payload);\r\n        localStorage.username = payload.username;\r\n        let login_url = serverBaseUrl() + '/registration/login/';\r\n        postAPIRequest(\r\n            login_url,\r\n            (results) => {\r\n                if (results['access_token']) {\r\n                    localStorage.token = results['access_token'];\r\n                }\r\n                this.setState({\r\n                    activity: false\r\n                }, pushHistory(this.props, '/'));\r\n            },\r\n            (results) => {\r\n                let alert_message = extractResponseError(results);\r\n                this.setState({\r\n                    message: true,\r\n                    message_text: alert_message,\r\n                    message_variant: 'error',\r\n                    activity: false\r\n                });\r\n            },\r\n            payload,\r\n            {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        );\r\n    };\r\n\r\n    render() {\r\n        let login_button = <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            Login\r\n        </Button>;\r\n        if (this.state.activity) {\r\n            login_button = <FormActivityIndicator/>;\r\n        }\r\n        let message = '';\r\n        if (this.state.message) {\r\n            message = <FormFeedbackMessage\r\n                message_variant={this.state.message_variant}\r\n                message_text={this.state.message_text}\r\n            />;\r\n        }\r\n        return (\r\n            <Paper className=\"Login-container\">\r\n                <Container maxWidth=\"sm\">\r\n                    <Grid\r\n                        container\r\n                        spacing={0}\r\n                        alignItems=\"center\"\r\n                        justify=\"center\"\r\n                        className=\"login-grid\"\r\n                    >\r\n                        <Card>\r\n                            <CardContent>\r\n                                {message}\r\n                                <form\r\n                                    noValidate\r\n                                    autoComplete=\"off\"\r\n                                    onSubmit={(e) => this.handleLoginSubmit(e)}\r\n                                    id=\"login-form\"\r\n                                >\r\n                                    <div>\r\n                                        <Grid container spacing={3}>\r\n                                            <Grid item xs={12}>\r\n                                                <FormControl fullWidth>\r\n                                                    <TextField label=\"Email/Username\" name=\"username\"/>\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <FormControl fullWidth>\r\n                                                    <TextField type=\"password\" label=\"Password\" name=\"password\"/>\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                            <Grid item xs={12}>\r\n                                                <FormControl fullWidth>\r\n                                                    {login_button}\r\n                                                </FormControl>\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </div>\r\n                                </form>\r\n                            </CardContent>\r\n                        </Card>\r\n                    </Grid>\r\n                </Container>\r\n            </Paper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(FormLogin);","import React, {Component} from 'react';\r\n\r\nexport default class LoadingIndicator extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row justify-content-center align-content-center loading-page\">\r\n                <div className=\"spinner-grow text-primary\" style={{width: '5rem', height: '5rem'}} role=\"status\">\r\n                    <span className=\"sr-only\">Processing...</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { fade, makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        width: theme.spacing(7),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 7),\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: 200,\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function PrimarySearchAppBar(props) {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n    const isMenuOpen = Boolean(anchorEl);\r\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n    const handleProfileMenuOpen = event => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleMobileMenuClose = () => {\r\n        setMobileMoreAnchorEl(null);\r\n    };\r\n\r\n    const handleMenuClose = () => {\r\n        setAnchorEl(null);\r\n        handleMobileMenuClose();\r\n    };\r\n\r\n    const handleMobileMenuOpen = event => {\r\n        setMobileMoreAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const menuId = 'primary-search-account-menu';\r\n    const renderMenu = (\r\n        <Menu\r\n            anchorEl={anchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={menuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMenuOpen}\r\n            onClose={handleMenuClose}\r\n        >\r\n            <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n            <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    const mobileMenuId = 'primary-search-account-menu-mobile';\r\n    const renderMobileMenu = (\r\n        <Menu\r\n            anchorEl={mobileMoreAnchorEl}\r\n            anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            id={mobileMenuId}\r\n            keepMounted\r\n            transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n            open={isMobileMenuOpen}\r\n            onClose={handleMobileMenuClose}\r\n        >\r\n            <MenuItem>\r\n                <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                    <Badge badgeContent={4} color=\"secondary\">\r\n                        <MailIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p>Messages</p>\r\n            </MenuItem>\r\n            <MenuItem>\r\n                <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n                    <Badge badgeContent={11} color=\"secondary\">\r\n                        <NotificationsIcon />\r\n                    </Badge>\r\n                </IconButton>\r\n                <p>Notifications</p>\r\n            </MenuItem>\r\n            <MenuItem onClick={handleProfileMenuOpen}>\r\n                <IconButton\r\n                    aria-label=\"account of current user\"\r\n                    aria-controls=\"primary-search-account-menu\"\r\n                    aria-haspopup=\"true\"\r\n                    color=\"inherit\"\r\n                >\r\n                    <AccountCircle />\r\n                </IconButton>\r\n                <p>Profile</p>\r\n            </MenuItem>\r\n        </Menu>\r\n    );\r\n\r\n    return (\r\n        <div className={classes.grow}>\r\n            <AppBar position=\"fixed\">\r\n                <Toolbar>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        aria-label=\"open drawer\"\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                        {props['brand_name']}\r\n                    </Typography>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon />\r\n                        </div>\r\n                        <InputBase\r\n                            placeholder=\"Search…\"\r\n                            classes={{\r\n                                root: classes.inputRoot,\r\n                                input: classes.inputInput,\r\n                            }}\r\n                            inputProps={{ 'aria-label': 'search' }}\r\n                        />\r\n                    </div>\r\n                    <div className={classes.grow} />\r\n                    <div className={classes.sectionDesktop}>\r\n                        <IconButton aria-label={`show ${props['notifications_count']} new notifications`} color=\"inherit\">\r\n                            <Badge badgeContent={props['notifications_count']} color=\"secondary\">\r\n                                <NotificationsIcon />\r\n                            </Badge>\r\n                        </IconButton>\r\n                        <IconButton\r\n                            edge=\"end\"\r\n                            aria-label=\"account of current user\"\r\n                            aria-controls={menuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleProfileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <AccountCircle />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className={classes.sectionMobile}>\r\n                        <IconButton\r\n                            aria-label=\"show more\"\r\n                            aria-controls={mobileMenuId}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleMobileMenuOpen}\r\n                            color=\"inherit\"\r\n                        >\r\n                            <MoreIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n            {renderMobileMenu}\r\n            {renderMenu}\r\n        </div>\r\n    );\r\n}","import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {pushHistory} from \"./functions/componentActions\";\r\nimport {postAPIRequest, getAPIRequest} from \"./functions/APIRequests\";\r\nimport {serverBaseUrl} from \"./functions/baseUrls\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport LoadingIndicator from \"./components/LoadingIndicator\";\r\nimport {AppBar, Toolbar, IconButton, Typography, Button, Badge} from '@material-ui/core';\r\nimport {Menu as MenuIcon, AccountCircle} from '@material-ui/icons';\r\nimport TopMenu from \"./components/TopMenu\";\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let current_user_url = serverBaseUrl() + '/registration/users/i/';\r\n        getAPIRequest(\r\n            current_user_url,\r\n            () => {\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            },\r\n            () => {\r\n                pushHistory(this.props, '/login');\r\n                localStorage.removeItem('token');\r\n            },\r\n            {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.token\r\n            }\r\n        );\r\n    }\r\n\r\n    handleLogout = (e) => {\r\n        e.preventDefault();\r\n        let logout_url = serverBaseUrl() + '/registration/logout/';\r\n        postAPIRequest(\r\n            logout_url,\r\n            () => {\r\n                pushHistory(this.props, '/login');\r\n                localStorage.removeItem('token');\r\n            },\r\n            () => {\r\n                pushHistory(this.props, '/login');\r\n                localStorage.removeItem('token');\r\n            },\r\n            {},\r\n            {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.token\r\n            }\r\n        )\r\n    };\r\n\r\n    render() {\r\n        if (this.state.loading) {\r\n            return <LoadingIndicator/>;\r\n        }\r\n        return (\r\n            <div>\r\n                <TopMenu brand_name=\"Loanbook\" notifications_count={0}/>\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nMenu.propTypes = {\r\n    sessionVariables: PropTypes.object.isRequired,\r\n    dispatch: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const {sessionVariables} = state;\r\n\r\n    return {\r\n        sessionVariables,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Menu))","import fetch from 'cross-fetch';\r\n\r\nexport const REQUEST_DATA = 'REQUEST_DATA';\r\nexport const RECEIVE_DATA = 'RECEIVE_DATA';\r\nexport const SELECT_API_ENDPOINT = 'SELECT_API_ENDPOINT';\r\nexport const INVALIDATE_DATA = 'INVALIDATE_DATA';\r\n\r\nexport function setSessionVariable(var_name, var_value) {\r\n    return {\r\n        type: SELECT_API_ENDPOINT,\r\n        var_value,\r\n        var_name\r\n    }\r\n}\r\n\r\nexport function invalidateData(endpoint) {\r\n    return {\r\n        type: INVALIDATE_DATA,\r\n        endpoint\r\n    }\r\n}\r\n\r\nfunction requestData(endpoint) {\r\n    return {\r\n        type: REQUEST_DATA,\r\n        endpoint\r\n    }\r\n}\r\n\r\nfunction receiveData(endpoint, json) {\r\n    return {\r\n        type: RECEIVE_DATA,\r\n        endpoint,\r\n        items: json,\r\n        receivedAt: Date.now()\r\n    }\r\n}\r\n\r\nfunction fetchData(endpoint) {\r\n    return dispatch => {\r\n        dispatch(requestData(endpoint));\r\n        return fetch(endpoint, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.token\r\n            }\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => dispatch(receiveData(endpoint, json)))\r\n    }\r\n}\r\n\r\nfunction shouldFetchData(state, endpoint) {\r\n    const items = state.dataByUrl[endpoint];\r\n    if (!items) {\r\n        return true\r\n    } else if (items.isFetching) {\r\n        return false\r\n    } else {\r\n        return items.didInvalidate\r\n    }\r\n}\r\n\r\nexport function fetchDataIfNeeded(endpoint) {\r\n    return (dispatch, getState) => {\r\n        if (shouldFetchData(getState(), endpoint)) {\r\n            return dispatch(fetchData(endpoint))\r\n        }\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport default class FormModal extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Dialog\r\n                    fullWidth=\"sm\"\r\n                    maxWidth=\"sm\"\r\n                    open={this.props.open}\r\n                    onClose={this.props['handleClose']}\r\n                    disableBackdropClick\r\n                    aria-labelledby=\"form-dialog-title\">\r\n                    <DialogTitle id=\"form-dialog-title\">{this.props['title']}</DialogTitle>\r\n                    {this.props.children}\r\n                </Dialog>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport MomentUtils from '@date-io/moment';\r\nimport {\r\n    DatePicker,\r\n    MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\n\r\nexport default function App(props) {\r\n    return (\r\n        <MuiPickersUtilsProvider utils={MomentUtils}>\r\n            <DatePicker\r\n                onChange={props['onChange']}\r\n                maxDate={props['maxDate']}\r\n                value={props['value']}\r\n                format={props['format']}\r\n                label={props['label']}\r\n                fullWidth={props['fullWidth']}\r\n            />\r\n        </MuiPickersUtilsProvider>\r\n    );\r\n}","/* eslint-disable no-use-before-define */\r\nimport React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n// ISO 3166-1 alpha-2\r\n// ⚠️ No support for IE 11\r\nfunction countryToFlag(isoCode) {\r\n    return typeof String.fromCodePoint !== 'undefined'\r\n        ? isoCode.toUpperCase().replace(/./g, char => String.fromCodePoint(char.charCodeAt(0) + 127397))\r\n        : isoCode;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    option: {\r\n        fontSize: 15,\r\n        '& > span': {\r\n            marginRight: 10,\r\n            fontSize: 18,\r\n        },\r\n    },\r\n});\r\n\r\nexport default function CountrySelect(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Autocomplete\r\n            id=\"autocomplete-select\"\r\n            options={props['data']}\r\n            classes={{\r\n                option: classes.option,\r\n            }}\r\n            autoHighlight\r\n            onChange={(e, option) => props['onChange'](option)}\r\n            getOptionLabel={option => option.label}\r\n            renderOption={option => (\r\n                <React.Fragment>\r\n                    {option.optionDisplay}\r\n                </React.Fragment>\r\n            )}\r\n            renderInput={params => (\r\n                <TextField\r\n                    {...params}\r\n                    label={props['label']}\r\n                    fullWidth\r\n                    inputProps={{\r\n                        ...params.inputProps,\r\n                        autoComplete: 'disabled', // disable autocomplete and autofill\r\n                    }}\r\n                />\r\n            )}\r\n        />\r\n    );\r\n}","import React, {Component} from \"react\";\r\nimport moment from \"moment\";\r\nimport {countries} from 'countries-list';\r\nimport {extractResponseError, lookup, formDataToPayload} from \"../functions/componentActions\";\r\nimport FormActivityIndicator from \"../components/FormActivityIndicator\";\r\nimport $ from 'jquery';\r\nimport {serverBaseUrl} from \"../functions/baseUrls\";\r\nimport {postAPIRequest} from \"../functions/APIRequests\";\r\nimport {\r\n    fetchDataIfNeeded,\r\n    invalidateData\r\n} from '../actions/actions';\r\nimport FormFeedbackMessage from \"../components/FormFeedbackMessage\";\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {TextField, Grid, FormControl, Select, MenuItem, InputLabel} from \"@material-ui/core\";\r\nimport DatePicker from \"../components/DatePicker\";\r\nimport AutocompleteSelect from \"../components/AutocompleteSelect\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\n\r\nclass ClientDetailsForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let _18_years_ago = moment().subtract(18, 'years').toDate();\r\n        this.state = {\r\n            _18_years_ago: _18_years_ago,\r\n            selected_date: _18_years_ago,\r\n            selected_country: '',\r\n            activity: false,\r\n            message: false,\r\n            message_variant: 'info',\r\n            message_text: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        lookup((country) => {\r\n            let country_object = countries[country] || {};\r\n            document.querySelector('input[name=mobile_no]').value = '+' + country_object['phone'];\r\n        })\r\n    }\r\n\r\n    handleDateChange = date => {\r\n        this.setState({\r\n            selected_date: date\r\n        });\r\n    };\r\n\r\n    handleSubmitClient(e) {\r\n        e.preventDefault();\r\n        this.setState({activity: true});\r\n        let formData = new FormData($('form#client-details-form')[0]);\r\n        let date_of_birth = this.state.selected_date;\r\n        if (typeof date_of_birth === \"object\") {\r\n            date_of_birth = moment(date_of_birth).format('YYYY-MM-DD');\r\n        }\r\n        let payload = {\r\n            date_of_birth: date_of_birth\r\n        };\r\n        payload = formDataToPayload(formData, payload);\r\n        let clients_url = serverBaseUrl() + '/registration/members/';\r\n        postAPIRequest(clients_url,\r\n            (results) => {\r\n                this.setState({\r\n                    message: true,\r\n                    message_text: 'Client added successfully',\r\n                    message_variant: 'success',\r\n                    activity: false\r\n                });\r\n                $(\"form#client-details-form\")[0].reset();\r\n                const {sessionVariables, dispatch} = this.props;\r\n                let clients_url = sessionVariables['clients_url'] || '';\r\n                dispatch(fetchDataIfNeeded(clients_url));\r\n                dispatch(invalidateData(clients_url));\r\n            },\r\n            (results) => {\r\n                let alert_message = extractResponseError(results);\r\n                this.setState({\r\n                    message: true,\r\n                    message_text: alert_message,\r\n                    message_variant: 'error',\r\n                    activity: false\r\n                });\r\n            },\r\n            payload,\r\n            {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.token\r\n            }\r\n        );\r\n    }\r\n\r\n    handleCountryChange = (country_object) => {\r\n        this.setState({\r\n            selected_country: country_object['label'],\r\n        });\r\n        document.querySelector('input[name=mobile_no]').value = country_object['phone'];\r\n    };\r\n\r\n\r\n    render() {\r\n        let countries_list = Object.keys(countries).map(function (key) {\r\n            let country = countries[key];\r\n            return {\r\n                value: key,\r\n                label: country.name,\r\n                optionDisplay: country.name + '(' + country.native + ')',\r\n                phone: '+' + country.phone\r\n            }\r\n        });\r\n\r\n        let add_client_button = <DialogActions>\r\n            <Button color=\"primary\" type=\"submit\">\r\n                Add client\r\n            </Button>\r\n            <Button onClick={this.props['handleClose']} color=\"primary\">\r\n                Close\r\n            </Button>\r\n        </DialogActions>;\r\n        if (this.state.activity) {\r\n            add_client_button = <FormActivityIndicator/>;\r\n        }\r\n\r\n        let message = '';\r\n        if (this.state.message) {\r\n            message = <FormFeedbackMessage\r\n                message_variant={this.state.message_variant}\r\n                message_text={this.state.message_text}\r\n            />;\r\n        }\r\n\r\n        return (\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    {message}\r\n                    <form onSubmit={(e) => this.handleSubmitClient(e)} id=\"client-details-form\">\r\n                        <DialogContent>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={6}>\r\n                                    <TextField fullWidth type=\"text\" label=\"First name\" name=\"first_name\" required={true}/>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <TextField fullWidth type=\"text\" label=\"Last name\" name=\"last_name\" required={true}/>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={6}>\r\n                                    <TextField fullWidth type=\"text\" label=\"ID no\" name=\"id_no\" required={true}/>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <InputLabel id=\"gender-select-label\">Gender</InputLabel>\r\n                                    <Select fullWidth name=\"gender\" labelId=\"gender-select-label\" required={true}>\r\n                                        <MenuItem value=\"male\">Male</MenuItem>\r\n                                        <MenuItem value=\"female\">Female</MenuItem>\r\n                                        <MenuItem value=\"other\">Other</MenuItem>\r\n                                    </Select>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={12}>\r\n                                    <DatePicker\r\n                                        label=\"Date of birth\"\r\n                                        maxDate={this.state._18_years_ago}\r\n                                        value={this.state.selected_date}\r\n                                        onChange={this.handleDateChange}\r\n                                        format=\"YYYY-MM-DD\"\r\n                                        fullWidth={true}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={12}>\r\n                                    <FormControl fullWidth>\r\n                                        <AutocompleteSelect\r\n                                            label=\"Country\"\r\n                                            optionLabel=\"label\"\r\n                                            data={countries_list}\r\n                                            onChange={(value) => this.handleCountryChange(value)}\r\n                                        />\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={12}>\r\n                                    <TextField fullWidth type=\"email\" label=\"Email\" name=\"email\" required={true}/>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={12}>\r\n                                    <FormControl fullWidth>\r\n                                        <TextField fullWidth type=\"text\" label=\"Phone number\"\r\n                                                   name=\"mobile_no\" ref=\"mobile_no\" required={true}\r\n                                        />\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContent>\r\n                        {add_client_button}\r\n                    </form>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nClientDetailsForm.propTypes = {\r\n    sessionVariables: PropTypes.object.isRequired,\r\n    dispatch: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const {sessionVariables} = state;\r\n\r\n    return {\r\n        sessionVariables,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(ClientDetailsForm))","import React, {Component} from \"react\";\r\nimport FormActivityIndicator from \"../components/FormActivityIndicator\";\r\nimport $ from 'jquery';\r\nimport {extractResponseError, formDataToPayload, getUrlData} from \"../functions/componentActions\";\r\nimport {postAPIRequest} from \"../functions/APIRequests\";\r\nimport {serverBaseUrl} from \"../functions/baseUrls\";\r\nimport FormFeedbackMessage from \"../components/FormFeedbackMessage\";\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {withRouter} from 'react-router-dom';\r\nimport moment from \"moment\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport {Grid, Typography, TextField, Select, MenuItem, InputLabel, InputAdornment} from \"@material-ui/core\";\r\nimport DatePicker from \"../components/DatePicker\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass FormIssueLoan extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selected_client: null,\r\n            date_of_first_repayment: null,\r\n            date_of_loan_application: null,\r\n            activity: false,\r\n            message: false,\r\n            message_variant: 'info',\r\n            message_text: null,\r\n        }\r\n    }\r\n\r\n    handleClientChange = selectedOption => {\r\n        this.setState({\r\n            selected_client: selectedOption\r\n        });\r\n    };\r\n\r\n    handleFirstDateChange = date => {\r\n        this.setState({\r\n            date_of_first_repayment: date\r\n        });\r\n    };\r\n\r\n    handleApplicationDateChange = date => {\r\n        this.setState({\r\n            date_of_loan_application: date\r\n        });\r\n    };\r\n\r\n    matchWithProduct = (payload, callback) => {\r\n        const {loan_products_data} = this.props;\r\n        let loan_products = loan_products_data.items || [];\r\n        let matching_product = loan_products.find(function (product) {\r\n            return product['amortization'] === payload['amortization'] &&\r\n                product['interest_method'] === payload['interest_calculation_method'] &&\r\n                product['interest_charged_per'] === payload['interest_charged_per'] &&\r\n                product['repayment_interval'] === payload['repayment_interval'] &&\r\n                product['repaid_every'] === parseInt(payload['repaid_every']);\r\n        });\r\n        if (matching_product) {\r\n            payload['loan_type'] = matching_product.id;\r\n            callback(payload);\r\n        } else {\r\n            this.createLoanProduct(payload, callback);\r\n        }\r\n    };\r\n\r\n    createLoanProduct = (loan_payload, callback) => {\r\n        const {chart_of_accounts_data, banks_data, loan_products_url, loan_products_data} = this.props;\r\n        let chart_of_accounts = chart_of_accounts_data['items'];\r\n        let loans = loan_products_data['items'];\r\n        let today = moment().format('YYYY-MM-DD');\r\n        let close_date = moment().add(100, 'years').format('YYYY-MM-DD');\r\n        let asset_account = chart_of_accounts.find(function (account) {\r\n            return account['account_type'] === 1;\r\n        });\r\n        let income_account = chart_of_accounts.find(function (account) {\r\n            return account['account_type'] === 4;\r\n        });\r\n        let expenses_account = chart_of_accounts.find(function (account) {\r\n            return account['account_type'] === 5;\r\n        });\r\n        let liabilities_account = chart_of_accounts.find(function (account) {\r\n            return account['account_type'] === 2;\r\n        });\r\n        let banks = banks_data['items'];\r\n        let bank = banks[0];\r\n        let product_name = 'Per ' + loan_payload['interest_charged_per'] +\r\n            ' ' + loan_payload['interest_calculation_method'] +\r\n            ' ' + loan_payload['amortization'] +\r\n            ' ' + loan_payload['repaid_every'] +\r\n            ' ' + loan_payload['repayment_interval'];\r\n        let short_name = loans.length + 1;\r\n        let payload = {\r\n            product_name: product_name,\r\n            short_name: short_name,\r\n            description: product_name,\r\n            start_date: today,\r\n            close_date: close_date,\r\n            loan_fund: bank['gl_account'],\r\n            status: 'active',\r\n            minimum_days_disbursement_repayment: 0,\r\n            minimum_principal: 1,\r\n            maximum_principal: 2147483647,\r\n            minimum_repayments: 1,\r\n            maximum_repayments: 100,\r\n            minimum_interest_rate: 0,\r\n            maximum_interest_rate: 2147483647,\r\n            default_interest_rate: loan_payload['interest_rate'],\r\n            interest_charged_per: loan_payload['interest_charged_per'],\r\n            repaid_every: loan_payload['repaid_every'],\r\n            repayment_interval: loan_payload['repayment_interval'],\r\n            interest_method: loan_payload['interest_calculation_method'],\r\n            days_overdue_before_arreas: 30,\r\n            days_overdue_before_npa: 60,\r\n            minimum_guarantors: 0,\r\n            maximum_guarantors: 0,\r\n            place_guarantor_funds_hold: 'yes',\r\n            enable_multiple_disbursals: 'yes',\r\n            amortization: loan_payload['amortization'],\r\n            gl_account: asset_account['id'],\r\n            interest_account: income_account['id'],\r\n            overpayment_account: liabilities_account['id'],\r\n            losses_from_write_off: expenses_account['id'],\r\n            is_group_loan: false,\r\n            recalculate_loan_advance_payment: false,\r\n            realtime_interest: false,\r\n            realtime_penalties: true,\r\n            total_interest_calculation_method: 'as_per_loan_type',\r\n            calculate_repayment_ability_from_salary: false,\r\n            no_of_decimal_places: 0,\r\n            members_only: true,\r\n            maximum_number_of_concurrent_loans: 1,\r\n            recalculate_loan_on_repayment: false,\r\n            interest_posting_method: 'on_application',\r\n        };\r\n        postAPIRequest(loan_products_url,\r\n            (results) => {\r\n                loan_payload['loan_type'] = results.id;\r\n                callback(loan_payload);\r\n            },\r\n            (results) => {\r\n                let alert_message = extractResponseError(results);\r\n                this.setState({\r\n                    alert: true,\r\n                    alert_message: alert_message,\r\n                    alert_class: 'alert alert-danger',\r\n                    activity: false\r\n                });\r\n            },\r\n            payload,\r\n            {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.token\r\n            }\r\n        );\r\n    };\r\n\r\n    handleLoanIssueSubmit(e) {\r\n        e.preventDefault();\r\n        this.setState({activity: true});\r\n        let formData = new FormData($('form#issue-loan-form')[0]);\r\n        let milliseconds = new Date().getTime();\r\n        let loan_reference_no = 'LNR-' + milliseconds;\r\n        let payload = {\r\n            date_of_first_repayment: moment(this.state.date_of_first_repayment).format('YYYY-MM-DD'),\r\n            loan_reference_no: loan_reference_no,\r\n            date_of_loan_application: moment(this.state.date_of_loan_application).format('YYYY-MM-DD'),\r\n            member: (this.props['selected_client'] || {})['id']\r\n        };\r\n        payload = formDataToPayload(formData, payload);\r\n        this.matchWithProduct(payload, (payload) => {\r\n            let loan_application_url = serverBaseUrl() + '/products/applied_loans/';\r\n            postAPIRequest(loan_application_url,\r\n                (results) => {\r\n                    this.setState({\r\n                        message: true,\r\n                        message_text: 'Loan issued successfully',\r\n                        message_variant: 'success',\r\n                        activity: false\r\n                    });\r\n                    $(\"form#issue-loan-form\")[0].reset();\r\n                },\r\n                (results) => {\r\n                    let alert_message = extractResponseError(results);\r\n                    this.setState({\r\n                        message: true,\r\n                        message_text: alert_message,\r\n                        message_variant: 'error',\r\n                        activity: false\r\n                    });\r\n                },\r\n                payload,\r\n                {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.token\r\n                }\r\n            );\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        let selected_client = this.props['selected_client'];\r\n        let issue_loan_button = <DialogActions>\r\n            <Button color=\"primary\" type=\"submit\">\r\n                Issue Loan\r\n            </Button>\r\n            <Button onClick={this.props['handleClose']} color=\"primary\">\r\n                Close\r\n            </Button>\r\n        </DialogActions>;\r\n        if (this.state.activity) {\r\n            issue_loan_button = <FormActivityIndicator/>;\r\n        }\r\n\r\n        let message = '';\r\n        if (this.state.message) {\r\n            message = <FormFeedbackMessage\r\n                message_variant={this.state.message_variant}\r\n                message_text={this.state.message_text}\r\n            />;\r\n        }\r\n\r\n        return (\r\n            <Grid container>\r\n                <Grid item xs={12}>\r\n                    {message}\r\n                    <form onSubmit={(e) => this.handleLoanIssueSubmit(e)} id=\"issue-loan-form\">\r\n                        <DialogContent>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={12}>\r\n                                    <Typography fullWidth>Client: {selected_client['full_name']}</Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={6}>\r\n                                    <TextField type=\"number\" fullWidth label=\"Amount\" name=\"amount\" required={true}/>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <TextField type=\"number\" label=\"Interest rate\"\r\n                                               required={true} name=\"interest_rate\"\r\n                                               InputProps={{\r\n                                                   endAdornment: (\r\n                                                       <InputAdornment position='end'>\r\n                                                           <InputLabel id=\"interest-charged-per-label\">Per</InputLabel>\r\n                                                           <Select name=\"interest_charged_per\" labelId=\"interest-charged-per-label\">\r\n                                                               <MenuItem value=\"month\">Per month</MenuItem>\r\n                                                               <MenuItem value=\"year\">Per year</MenuItem>\r\n                                                           </Select>\r\n                                                       </InputAdornment>\r\n                                                   ),\r\n                                               }}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={12}>\r\n                                    <InputLabel id=\"interest-calculation-method-label\">Interest calculation method</InputLabel>\r\n                                    <Select fullWidth labelId=\"interest-calculation-method-label\" name=\"interest_calculation_method\">\r\n                                        <MenuItem value=\"flat_rate\">Flat rate</MenuItem>\r\n                                        <MenuItem value=\"reducing_balance\">Reducing balance</MenuItem>\r\n                                    </Select>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={6}>\r\n                                    <DatePicker\r\n                                        label=\"Date of application\"\r\n                                        value={this.state.date_of_loan_application}\r\n                                        format=\"YYYY-MM-DD\"\r\n                                        fullWidth={true}\r\n                                        onChange={this.handleApplicationDateChange}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <DatePicker\r\n                                        label=\"First payment date\"\r\n                                        value={this.state.date_of_first_repayment}\r\n                                        format=\"YYYY-MM-DD\"\r\n                                        fullWidth={true}\r\n                                        onChange={this.handleFirstDateChange}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={12}>\r\n                                    <TextField type=\"number\" label=\"Repayment plan (repaid every)\"\r\n                                               required={true} fullWidth name=\"repaid_every\"\r\n                                               InputProps={{\r\n                                                   endAdornment: (\r\n                                                       <InputAdornment position='end'>\r\n                                                           <InputLabel id=\"repayment-interval-label\">Interval</InputLabel>\r\n                                                           <Select name=\"repayment_interval\"\r\n                                                                   labelId=\"repayment-interval-label\">\r\n                                                               <MenuItem value=\"days\">Days</MenuItem>\r\n                                                               <MenuItem value=\"months\">Months</MenuItem>\r\n                                                           </Select>\r\n                                                       </InputAdornment>\r\n                                                   ),\r\n                                               }}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={6}>\r\n                                    <TextField fullWidth type=\"number\" label=\"No of installments\"\r\n                                               name=\"no_of_repayments\" required={true}/>\r\n                                </Grid>\r\n                                <Grid item xs={6}>\r\n                                    <InputLabel id=\"amortization-label\">Amortization</InputLabel>\r\n                                    <Select fullWidth labelId=\"amortization-label\" name=\"amortization\">\r\n                                        <MenuItem value=\"equal_installments\">Equal installments</MenuItem>\r\n                                        <MenuItem value=\"equal_principal\">Equal principal payments</MenuItem>\r\n                                    </Select>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </DialogContent>\r\n                        {issue_loan_button}\r\n                    </form>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nFormIssueLoan.propTypes = {\r\n    sessionVariables: PropTypes.object.isRequired,\r\n    dispatch: PropTypes.func.isRequired,\r\n    loan_products_data: PropTypes.object.isRequired,\r\n    chart_of_accounts_data: PropTypes.object.isRequired,\r\n    banks_data: PropTypes.object.isRequired,\r\n    loan_products_url: PropTypes.string.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    const {sessionVariables, dataByUrl} = state;\r\n    let loan_products_url = sessionVariables['loan_products_url'] || '';\r\n    let chart_of_accounts_url = sessionVariables['chart_of_accounts_url'] || '';\r\n    let banks_url = sessionVariables['banks_url'] || '';\r\n    const loan_products_data = getUrlData(loan_products_url, dataByUrl);\r\n    const chart_of_accounts_data = getUrlData(chart_of_accounts_url, dataByUrl);\r\n    const banks_data = getUrlData(banks_url, dataByUrl);\r\n\r\n    return {\r\n        sessionVariables,\r\n        loan_products_data,\r\n        chart_of_accounts_data,\r\n        banks_data,\r\n        loan_products_url\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(FormIssueLoan))","import React, {Component} from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport {serverBaseUrl} from \"./functions/baseUrls\";\r\nimport {\r\n    setSessionVariable,\r\n    fetchDataIfNeeded\r\n} from './actions/actions';\r\nimport {getUrlData, dynamicSort, numberWithCommas} from \"./functions/componentActions\";\r\nimport FormModal from \"./components/FormModal\";\r\n// import LoanDetailsForm from \"./LoanDetailsForm\";\r\n// import ApproveLoanForm from \"./ApproveLoanForm\";\r\nimport moment from \"moment\";\r\nimport DataTable from \"./components/DataTable\";\r\nimport {Card, CardContent, Container, Button, Fab, Box} from \"@material-ui/core\";\r\nimport MaterialTable from 'material-table';\r\nimport {Add} from '@material-ui/icons';\r\nimport FormAddClient from \"./client/FormAddClient\";\r\nimport FormIssueLoan from \"./loan/FormIssueLoan\";\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selected_client: {},\r\n            add_client_dialogue_open: false,\r\n            issue_loan_dialogue_open: false,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let _1_month_ago = moment().subtract(1, 'month').format('YYYY-MM-DD');\r\n        let today = moment().format('YYYY-MM-DD');\r\n        this.fetchUrlData('clients_url', '/registration/members/');\r\n        this.fetchUrlData('loan_products_url', '/products/loans/');\r\n        this.fetchUrlData('chart_of_accounts_url', '/registration/chart_accounts/');\r\n        this.fetchUrlData('banks_url', '/registration/banks/');\r\n        this.fetchUrlData('pending_loans_url', '/products/applied_loans/?status=6');\r\n        this.fetchUrlData('pending_disbursement_url', '/products/applied_loans/?status=11');\r\n        this.fetchUrlData('payments_mode_url', '/registration/payment_modes/');\r\n        this.fetchUrlData('currencies_url', '/registration/currency/');\r\n        this.fetchUrlData('approved_loans_url', '/products/applied_loans/?status=9');\r\n        this.fetchUrlData('active_loans_url', '/products/applied_loans/?status=1');\r\n        this.fetchUrlData(\r\n            'current_month_income_url',\r\n            `/general_ledger/general_ledger/?date_from${_1_month_ago}&date_to${today}&totals=true&account_group=4`\r\n        );\r\n    }\r\n\r\n    fetchUrlData = (var_name, url) => {\r\n        const {dispatch} = this.props;\r\n        url = serverBaseUrl() + url;\r\n        this.props.dispatch(setSessionVariable(var_name, url));\r\n        dispatch(fetchDataIfNeeded(url));\r\n    };\r\n\r\n    createSummaryCard(icon, label, count) {\r\n        return <div className=\"card bg-grey border-width-0 clickable\">\r\n            <div className=\"card-body d-flex flex-row\">\r\n                <div className=\"col-md-4 mx-auto\">\r\n                    {/*<FontAwesomeIcon icon={icon} className=\"mx-auto\" size={'4x'} color=\"#A9C641\"/>*/}\r\n                </div>\r\n                <div className=\"col-md-8 d-flex flex-column justify-content-center align-items-end\">\r\n                    <div className=\"row\">\r\n                        <h1 className=\"h4 mb-3 font-weight-normal\">{count}</h1>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        {label}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    handleCloseDialogue = (form) => {\r\n        this.setState({\r\n            [form]: false\r\n        })\r\n    };\r\n\r\n    handleOpenDialogue = (form) => {\r\n        this.setState({\r\n            [form]: true\r\n        })\r\n    };\r\n\r\n    issueLoanButton() {\r\n        return <button className=\"btn btn-outline-primary\">\r\n            {/*<FontAwesomeIcon icon={faPlus}/> Issue loan*/}\r\n        </button>\r\n    }\r\n\r\n    editClientButton() {\r\n        return <Button color=\"primary\">Edit client</Button>\r\n    }\r\n\r\n    selectClient = (e, selected_client) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            selected_client: selected_client\r\n        });\r\n    };\r\n\r\n    approveLoanButton(cell, row) {\r\n        if (row['pending_loans'] > 0) {\r\n            return <button className=\"btn btn-outline-primary\" data-toggle=\"modal\" data-target=\"#approve-loan\"\r\n                           onClick={(e) => this.selectClient(e, row)}>\r\n                {/*<FontAwesomeIcon icon={faCheck}/> Approve loan*/}\r\n            </button>\r\n        } else if (row['pending_disburse_loans'] > 0) {\r\n            return <button className=\"btn btn-outline-primary\">\r\n                {/*<FontAwesomeIcon icon={faCheck}/> Disburse loan*/}\r\n            </button>\r\n        } else if (row['approved_loans'] > 0) {\r\n            return <button className=\"btn btn-outline-primary\">\r\n                {/*<FontAwesomeIcon icon={faCheck}/> Process loan*/}\r\n            </button>\r\n        } else {\r\n            return <div/>;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            clients_data,\r\n            pending_loans_data,\r\n            banks_data,\r\n            payments_mode_data,\r\n            currencies_data,\r\n            approved_loans_data,\r\n            active_loans_data,\r\n            current_month_income_data\r\n        } = this.props;\r\n        let clients = clients_data['items'];\r\n        let pending_loans = pending_loans_data['items'];\r\n        let banks = banks_data['items'];\r\n        let payments_mode = payments_mode_data['items'];\r\n        let currencies = currencies_data['items'];\r\n        let approved_loans = approved_loans_data['items'];\r\n        let active_loans = active_loans_data['items'];\r\n        let current_month_income = current_month_income_data['items'];\r\n        clients.sort(dynamicSort('-approved_loans'));\r\n        clients.sort(dynamicSort('-pending_disburse_loans'));\r\n        clients.sort(dynamicSort('-pending_loans'));\r\n        let total_outstanding_amount = 0;\r\n        active_loans.forEach(function (loan) {\r\n            total_outstanding_amount += loan['outstanding_balance'];\r\n        });\r\n        let total_current_month_income = 0;\r\n        current_month_income.forEach(function (loan) {\r\n            total_current_month_income += loan['credit'];\r\n        });\r\n        let clients_columns = [{\r\n\r\n            field: 'full_name',\r\n            title: 'Name',\r\n        }, {\r\n            field: 'mobile_no',\r\n            title: 'Phone number',\r\n        }];\r\n\r\n        let actions = [\r\n            {\r\n                icon: 'edit',\r\n                tooltip: 'Edit Client',\r\n                onClick: (event, rowData) => {\r\n                    // Do save operation\r\n                }\r\n            }, {\r\n                icon: 'add',\r\n                tooltip: 'Issue Loan',\r\n                onClick: (event, rowData) => this.setState({\r\n                    selected_client: rowData\r\n                }, () => this.handleOpenDialogue('issue_loan_dialogue_open'))\r\n            }, {\r\n                icon: 'done',\r\n                tooltip: 'Approve Loan',\r\n                onClick: (event, rowData) => {\r\n                    // Do save operation\r\n                }\r\n            }, {\r\n                icon: 'payment',\r\n                tooltip: 'Add payment',\r\n                onClick: (event, rowData) => {\r\n                    // Do save operation\r\n                }\r\n            }\r\n        ];\r\n\r\n        return (\r\n            <Container maxWidth=\"xl\" className=\"Main-container\">\r\n                <Box pt={2}>\r\n                    <Fab variant=\"extended\" color=\"default\"\r\n                         onClick={(e) => this.handleOpenDialogue('add_client_dialogue_open')}>\r\n                        <Add/>\r\n                        Add client\r\n                    </Fab>\r\n                </Box>\r\n                <Box mt={2}>\r\n                    <MaterialTable\r\n                        isLoading={clients_data['isFetching']}\r\n                        title=\"Clients\"\r\n                        columns={clients_columns}\r\n                        data={clients}\r\n                        options={{actionsColumnIndex: -1}}\r\n                        actions={actions}\r\n                    />\r\n                </Box>\r\n                <FormModal\r\n                    handleClickOpen={(e) => this.handleOpenDialogue('add_client_dialogue_open')}\r\n                    handleClose={(e) => this.handleCloseDialogue('add_client_dialogue_open')}\r\n                    open={this.state.add_client_dialogue_open}\r\n                    title=\"Add client\"\r\n                >\r\n                    <FormAddClient\r\n                        handleClose={(e) => this.handleCloseDialogue('add_client_dialogue_open')}\r\n                    />\r\n                </FormModal>\r\n                <FormModal\r\n                    handleClickOpen={(e) => this.handleOpenDialogue('issue_loan_dialogue_open')}\r\n                    handleClose={(e) => this.handleCloseDialogue('issue_loan_dialogue_open')}\r\n                    open={this.state.issue_loan_dialogue_open}\r\n                    title=\"Issue loan\"\r\n                >\r\n                    <FormIssueLoan\r\n                        selected_client={this.state.selected_client}\r\n                        handleClose={(e) => this.handleCloseDialogue('issue_loan_dialogue_open')}\r\n                    />\r\n                </FormModal>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nHome.propTypes = {\r\n    sessionVariables: PropTypes.object.isRequired,\r\n    dispatch: PropTypes.func.isRequired,\r\n    clients_data: PropTypes.object.isRequired,\r\n    pending_loans_data: PropTypes.object.isRequired,\r\n    pending_disbursement_data: PropTypes.object.isRequired,\r\n    banks_data: PropTypes.object.isRequired,\r\n    payments_mode_data: PropTypes.object.isRequired,\r\n    currencies_data: PropTypes.object.isRequired,\r\n    approved_loans_data: PropTypes.object.isRequired,\r\n    active_loans_data: PropTypes.object.isRequired,\r\n    current_month_income_data: PropTypes.object.isRequired\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n    function retrieveUrlData(url_var_name) {\r\n        let url = sessionVariables[url_var_name] || '';\r\n        return getUrlData(url, dataByUrl);\r\n    }\r\n\r\n    const {sessionVariables, dataByUrl} = state;\r\n    const clients_data = retrieveUrlData('clients_url', dataByUrl);\r\n    const pending_loans_data = retrieveUrlData('pending_loans_url', dataByUrl);\r\n    const pending_disbursement_data = retrieveUrlData('pending_disbursement_url', dataByUrl);\r\n    const banks_data = retrieveUrlData('banks_url', dataByUrl);\r\n    const payments_mode_data = retrieveUrlData('payments_mode_url', dataByUrl);\r\n    const currencies_data = retrieveUrlData('currencies_url', dataByUrl);\r\n    const approved_loans_data = retrieveUrlData('approved_loans_url', dataByUrl);\r\n    const active_loans_data = retrieveUrlData('active_loans_url', dataByUrl);\r\n    const current_month_income_data = retrieveUrlData('current_month_income_url', dataByUrl);\r\n\r\n    return {\r\n        sessionVariables,\r\n        clients_data,\r\n        pending_loans_data,\r\n        pending_disbursement_data,\r\n        banks_data,\r\n        payments_mode_data,\r\n        currencies_data,\r\n        approved_loans_data,\r\n        active_loans_data,\r\n        current_month_income_data\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRouter(Home))","import React from 'react';\nimport FormLogin from \"./user/FormLogin\";\nimport Menu from \"./Menu\";\nimport Home from \"./Home\";\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport './App.css';\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route exact path=\"/login\" component={FormLogin} key={2}/>\n                <Menu>\n                    <Switch>\n                        <Route exact path=\"/\" component={Home} key={3.1}/>\n                    </Switch>\n                </Menu>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux'\r\nimport {\r\n    SELECT_API_ENDPOINT,\r\n    INVALIDATE_DATA,\r\n    REQUEST_DATA,\r\n    RECEIVE_DATA\r\n} from '../actions/actions'\r\n\r\nfunction sessionVariables(state = {}, action) {\r\n    switch (action.type) {\r\n        case SELECT_API_ENDPOINT:\r\n            return Object.assign({}, state, {\r\n                [action.var_name]: action.var_value\r\n            });\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nfunction urlData(\r\n    state = {\r\n        isFetching: false,\r\n        didInvalidate: false,\r\n        items: []\r\n    },\r\n    action\r\n) {\r\n    switch (action.type) {\r\n        case INVALIDATE_DATA:\r\n            return Object.assign({}, state, {\r\n                didInvalidate: true\r\n            });\r\n        case REQUEST_DATA:\r\n            return Object.assign({}, state, {\r\n                isFetching: true,\r\n                didInvalidate: false\r\n            });\r\n        case RECEIVE_DATA:\r\n            return Object.assign({}, state, {\r\n                isFetching: false,\r\n                didInvalidate: false,\r\n                items: action.items,\r\n                lastUpdated: action.receivedAt\r\n            });\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nfunction dataByUrl(state = {}, action) {\r\n    switch (action.type) {\r\n        case INVALIDATE_DATA:\r\n        case RECEIVE_DATA:\r\n        case REQUEST_DATA:\r\n            return Object.assign({}, state, {\r\n                [action.endpoint]: urlData(state[action.endpoint], action)\r\n            });\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    dataByUrl: dataByUrl,\r\n    sessionVariables\r\n});\r\n\r\nexport default rootReducer","import { createStore, applyMiddleware } from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport { createLogger } from 'redux-logger'\r\nimport rootReducer from './reducers/reducers'\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nexport default function configureStore(preloadedState) {\r\n    return createStore(\r\n        rootReducer,\r\n        preloadedState,\r\n        applyMiddleware(thunkMiddleware, loggerMiddleware)\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport configureStore from './configureStore';\n\nconst store = configureStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = {\r\n    serverBaseUrl: function () {\r\n        if(process.env.NODE_ENV === 'development') {\r\n            return 'http://localhost:8000';\r\n        } else {\r\n            return 'https://my.jisort.com';\r\n        }\r\n    }\r\n};","module.exports = {\r\n    postAPIRequest: function (url, successCallback, errorCallback, payload, headers, method = 'POST') {\r\n        fetch(url, {\r\n                method: method,\r\n                body: JSON.stringify(payload),\r\n                headers: headers,\r\n            }\r\n        ).then(function (response) {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            throw response;\r\n        }).then(function (response) {\r\n            return response.json();\r\n        }).then(function (json) {\r\n            successCallback(json);\r\n        }).catch(error => {\r\n            if (process.env.NODE_ENV === 'development' && error.status >= 500) {\r\n                errorCallback(error.statusText);\r\n            } else {\r\n                error.json().then((body) => {\r\n                    errorCallback(body);\r\n                });\r\n            }\r\n        });\r\n    },\r\n\r\n    getAPIRequest: function (url, successCallback, errorCallback, headers) {\r\n        fetch(url, {\r\n                headers: headers,\r\n            }\r\n        ).then(function (response) {\r\n            if (response.ok) {\r\n                return response;\r\n            }\r\n            throw response;\r\n        }).then(function (response) {\r\n            return response.json();\r\n        }).then(function (json) {\r\n            successCallback(json);\r\n        }).catch(error => {\r\n            if (process.env.NODE_ENV === 'development' && error.status >= 500) {\r\n                errorCallback(error.statusText);\r\n            } else {\r\n                error.json().then((body) => {\r\n                    errorCallback(body);\r\n                });\r\n            }\r\n        });\r\n    }\r\n};"],"sourceRoot":""}